@startuml
class Map {
-Hexes[]

}

class Hex {
-Hex[6] neighbors
-HexEdges
-number
-province
-TerrainImprovementType
-TerrainType
-isCapitol
+getNumber()
+getProvince()
+getMovementCost()
+getCombatEffect()
+getTerrainType()
+getTerrainImprovementType()
}

class HexEdges {
-edges[6]
+getEdges()
+edgeCrossed(int)
}

interface TerrainImprovementType {
+getMovementCost()
+getCombatEffect()
}

interface TerrainType {
+getMovementCost()
+getCombatEffect()
}

class Blasted
class Bridge
class BridgeGate
class Broken
class Capital
class Castle
class City
class Clear
class Cultivated
class DragonTunnel
class Ford
class Forest
class Glacier
class Karoo
class Moat
class River
class Lake
class Mountain
class Portal {
    -Hex[] portalHexes
    +Hex[] getPortals()
}
class ProvenceBorder
class Road
class Rough
class Stream
class Swamp
class Town
class Trail
class Vortex
class Wall
class Woods

RandomEvent ()- Map


Map *-- "*" Hex
Stacks "1" o- Hex


Hex *----- "1" TerrainType
Hex *--- "0-1" TerrainImprovementType
Hex *-- "0-1" Capital 
Hex *------ "0-1" HexEdges 

TerrainImprovementType <|-- Blasted
TerrainImprovementType <|-- Bridge
TerrainImprovementType <|-- BridgeGate
TerrainImprovementType <|-- Castle
TerrainImprovementType <|-- City
TerrainImprovementType <|-- DragonTunnel
TerrainImprovementType <|-- Ford
TerrainImprovementType <|-- Portal
TerrainImprovementType <|-- Road
TerrainImprovementType <|-- Town
TerrainImprovementType <|-- Trail
TerrainImprovementType <|-- Vortex

TerrainType <|--- Broken
TerrainType <|--- Clear
TerrainType <|--- Cultivated
TerrainType <|--- Forest
TerrainType <|--- Glacier
TerrainType <|--- Karoo
TerrainType <|--- River
TerrainType <|--- Lake
TerrainType <|--- Moat
TerrainType <|--- Mountain
TerrainType <|--- Rough
TerrainType <|--- Swamp
TerrainType <|--- Woods

HexEdge <|---- ProvenceBorder
HexEdge <|---- Stream
HexEdge <|---- Wall



@enduml
